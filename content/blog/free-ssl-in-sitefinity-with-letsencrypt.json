{
  "publishedAt": "2017-11-21T19:29:32.9030000Z",
  "legacyUrl": "/code/2017/11/21/free-ssl-in-sitefinity-with-letsencrypt",
  "needsFixing": false,
  "slug": "free-ssl-in-sitefinity-with-letsencrypt",
  "featuredImage": "/images/stock/500x280/img11.jpg",
  "markdown": true,
  "title": "Free SSL in Sitefinity with LetsEncrypt",
  "tags": [],
  "content": "![Let's Encrypt](https://letsencrypt.org/images/letsencrypt-logo-horizontal.svg)\n\nYour website **should** have SSL in 2017, for [many](https://searchengineland.com/google-starts-giving-ranking-boost-secure-httpsssl-sites-199446) reasons. As the website states, Let’s Encrypt is a free, automated, and open Certificate Authority. SSL has traditionally been expensive and frustrating to setup (validation steps, etc, etc)\n\nLets Encrypt though takes ALL the headaches away though, certs can even auto renew for you! So lets dig into how we can get this setup in Sitefinity.\n\nOf note is that the tool needs to generate a private key that gets validated so LE will need to be able to talk to you, so you can't just fire up a local site with a hostfile entry, you need to resolve on a public dns.  So I usually only setup LE for my public live sites, for private development I just stick to [local certs](https://www.sitefinitysteve.com/blog/sitefinity-10-and-the-remote-certificate-is-invalid-according-to-the-validation-procedure).\n\n*   So step 1 is to go and download letsencryptwin, you can find the github project [here](https://github.com/Lone-Coder/letsencrypt-win-simple), and the downloads under \"releases\" [here](https://github.com/Lone-Coder/letsencrypt-win-simple/releases). \n*    Download and extract the zip file to your server, it's basically just the .exe and some config files\n*   In the site you want to install the cert create a new folder called \".well-known\" on the root.  This is where letsencrypt will create the challenge to validate your domain ownership.\n*   Open the commandline, run \"letsencrypt --warmup\"\n*   From the menu Choose \"Create new certificate\"\n*   Single binding to an IIS site\n*   Choose your IIS site (it'll enumerate them and show the list)\n*   Choose Save file on local (network) path (as the validation option)\n*   Replace the task YES\n*   The last setting to specify a use is up to you if you need the task to run as someone specific.\n\nHere's how it should look\n\n![LetsEncryptSitefinity CommandLine](/images/posts/free-ssl-in-sitefinity-with-letsencrypt/letsencryptsitefinity_edit.png \"LetsEncryptSitefinity CommandLine\")  \n  \nDone and done, you should see the cert in your IIS bindings now!  \n  \nNow this of course works for just about any site, it's not sitefinity specific  \n  \nComing in 2018 LetsEncrypt will also be issuing wildcard certificates to make your life even EASIER!  \n  \nSo this post isn't \"sponsored\" or anything, lets encrypt is free, I just don't want to have to keep paying for SSL, or have to get clients to go set it all up.  \n  \n\n### Footnote\n\nIf you are experiencing issues with the above method, you might want to try Sitefinity 10.2 OWIN middleware integration.  \n  \nAdd the LetsEncrypt.Owin Nuget package, then impliment the Startup class into sitefinity from the following examples\n\n*   [Blog post](https://www.sitefinity.com/blogs/peter-filipov/posts/peter-filipov-blog/2017/11/14/hook-owin-middleware-into-sitefinity) by Peter\n*   [KB article](https://knowledgebase.progress.com/articles/Article/custom-owin-is-not-working-after-upgrade-to-sitefinity-10)\n\nIts really basically just the startup code and a webconfig entry, nothing complex.",
  "seoMetaImage": "/images/stock/500x280/img11.jpg",
  "seoDescription": "How to setup free SSL certificates in your sitefinity site"
}