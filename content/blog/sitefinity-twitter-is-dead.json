{
  "publishedAt": "2013-06-18T12:38:36.6230000Z",
  "legacyUrl": "/code/2013/06/18/sitefinity-twitter-is-dead",
  "needsFixing": false,
  "slug": "sitefinity-twitter-is-dead",
  "featuredImage": "/images/stock/500x280/img23.jpg",
  "markdown": true,
  "title": "Sitefinity Twitter is dead",
  "tags": [],
  "content": "Twitter announced long ago it was switching it's API to prevent 3rd part apps and abuse (limiting the daily hits from a site).  \n  \nYou could see this coming if you opened the console tab in your debug window on any Sitefinity site.  \n  \nIn the last couple days, this is what we see now:  \n\n![Twitter console](/images/posts/sitefinity-twitter-is-dead/blog-twitterconsole.png?sfvrsn=21078b66_2 \"blog-twitterconsole\")  \n\n(apologies for the sizing you can inspect your own sites though.  \n  \nSo teleriks response was initially \"we'll get right on it\" and they did, next release we had another widget...buuuut....The widget might as well be called \"Google Analytics\" or \"Poll Daddy\"...the designer is just a giant empty textbox that just doesn't render it's contents in design mode.  You can throw anything in there and it'll render (not in design mode).\n\n  \nBy comparison, [these guys](https://www.sitefinity.com/developer-network/marketplace/modules/fen%C3%AAtre-internet-applications/fen%C3%AAtre-twitter-feed) did took some time on user experience.  They are rightfully promoting it in [this](https://www.sitefinity.com/developer-network/forums/general-discussions-/twitter-widget-is-not-working-with-sitefinity-5-4) forum thread too.  @telerik, this is what we want...options, a comprehensive designer.  However I think they callback serverside...if I'm right that could be problematic, I don't want a serverside external dependancy.  \n  \nThere's so much it could have been...like twitter has a request limit on api calls, who needs to hit them every time the page refreshes.  There could have been a sf json cache implementation where the json results for multiple services are cached locally for a period of time, or something like that.  At a bare minimum at least give the user a link to know where to get the code from in the designer.  \n  \nSo here's a preview of what the twitter widget (on twitters end not sitefinity) generates.\n\n![Twitter preview](/images/posts/sitefinity-twitter-is-dead/blog-twitterpreview.png?sfvrsn=2a078b66_2 \"blog-twitterpreview\")  \nSo not a simple styleable ul\\\\li of tweets we're used to, but an external script to generate a whole UI in an iframe.  (Inline iframe scrollbar #ghetto, thanks twitter).  \n  \nIn closing  \n  \n@Telerik, lets sit down and talk, pull up a seat...The thing is, you guys are the experts, clearly better coders than we are...you should be doing things we cannot do and \"deliver more than expected\".  In this case the delivery was less than expected because it's less than what we have.  \n\nIf you can't budget the time to do it right, just tell us it's \"on the way\" and we will wait for a proper implementation (begrudgingly, or vocally, not gonna lie).  Just let us know you're working on it for a hotfix or next release.  Because right now we're feeling the heat on this from end users.\n\n### Update\n\nThis is all resolved in Sitefinity 6.1 SP1.  Not just fixed, but implemented **BETTER** than the original widget.  It uses publishing pipes, so in theory we shouldn't ever hit the twitter api cap because the content is coming from sitefinity, polled at an interval on twitter/\n\n### Update 2020\n\nThey yanked it again lol, I made a better one, you can go see it [here](new-sitefinity-twitter-feed-widget-service)",
  "seoMetaImage": "/images/stock/500x280/img23.jpg",
  "seoDescription": "Time to fix your Sitefinity twitter widget, it's been killed again. You know what, just go use mine instead."
}