{
  "tags": [
    "Tutorial"
  ],
  "publishedAt": "2023-11-23T14:59:55.098Z",
  "title": "Running Sitefinity on Apple Silicon with Parallels",
  "slug": "running-sitefinity-on-apple-silicon-with-parallels",
  "seoDescription": "How to setup and run Sitefinity on an M series ARM Apple Silicon mac",
  "content": "Just to prefix here, this is running on an M3 MAX Macbook Pro, but it runs so much faster than my Bootcamped 2019 Core i9 16 inch Macbook.  So this is Sitefinity MVC using .net 4.8, not Core just heads up.  But the SF backend (which is 4.8) runs just fine...\n\n## Step 1: Install windows\n\nWe're going to assume you have installed Parallels for Apple Silicon here, so now just install windows (and license it).  I migrated from windows by just copying my Sitefinity projects folder straight into the Windows VM, no changes.\n\n[Install Windows](https://kb.parallels.com/1253750)\n\n## Step 2: Install VS 2022 ARM\n\n[Visual Studio ARM](https://devblogs.microsoft.com/visualstudio/arm64-visual-studio-is-officially-here/)\n\nNï»¿ow you can load your site and build it, not really required for this if you already have the SitefinityWebApp.dll in the bin folder from the copy... but to develop further, GONNA NEED IT\n\n## Step 3: Setup IIS\n\n- [IIS Setup Instructions](https://www.how2shout.com/how-to/how-to-enable-iis-internet-information-services-on-windows-11.html)\n- [Sitefinity Required Features](https://www.progress.com/documentation/sitefinity-cms/configure-the-iis-to-host-sitefinity-projects)\n- [Install IIS Rewrite module](https://www.iis.net/downloads/microsoft/url-rewrite)\n\n## Step 4: Create IIS Site\n\n- You should already know how to do this, but create a new site in IIS, point it at your Sitefinity Folder. We're going to assume you called it \"dev.mysite.com\" for the purposes of the following steps\n- Open said folder in windows explorer, right-click, properties, and in Security give IIS AppPool\\dev.mysite.com access to the folder \n\n## Step 5: Add your SQL Server\n\n- [Install MS Sql with Docker](https://www.parallels.com/blogs/microsoft-sql-apple-silicon-docker-desktop/)\n\nI like to setup the persistance mode so my databases are external to docker, but it fundamentally doesn't matter I suppose\n\n## Step 6: Connect to SQL to test\n\n- Download the free [Azure Data Studio for Apple Silicon](https://learn.microsoft.com/en-us/azure-data-studio/download-azure-data-studio?tabs=win-install%2Cwin-user-install%2Credhat-install%2Cwindows-uninstall%2Credhat-uninstall)\n- You're probably going to want to install the following extensions\n    - Admin Pack for SQL Server\n    - SQL Server Arent\n    - SQL Server Dacpac\n    - SQL Server Import\n- Inside data studio, create your connection. The Server is your IP, Auth type of SQL Login, and the username and password are what you set in the docker install terminal code from Step 4.\n- From here you can use one of the import tools to restore your .bak (from the dashboard), or import your .bacpac\n\n## Step 7: Add hostfile entries\n\n- Inside windows, with a text editor running in Admin mode, open C:\\Windows\\System32\\drivers\\etc and edit the \"hosts\" file.\n- I like to add a host file entry for my SQL instance so just add the following, obviously use YOUR IP address from MacOS\n    - 192.168.2.208   localsql\n- Now add the hostfile entry for your local SF site, so example is below, again, use your IP, this time get the ip from in windows because it's the local parallels VM IP.\n    - 10.211.55.3     dev.mysite.com\n- In MacOS you'll need to add the same entries [Follow this to edit](https://kevdees.com/editing-host-files-quickly/) Make sure the IP addresses here are to your Windows VM (obviously, so same as the windows hostfile entries)\n- So now the \"dev.site.com\" should be accessable on both Host and VM.  Honestly the windows side I dont think is totally nessesary, but for debugging purposes I might need to get at the site on the windows side, so couldn't hurt.\n\n## Step 7: Edit your connection string\n\n- Inside your Sitefinity project, edit the App_Data\\Sitefinity\\Configuration\\Data.config and change the SQL connection string to be localsql (which we set above) and then whatever the credentials are to access it, sa\\pw whatever.\n\n## Step 8: Create the certs\n\nSo now we need to make the HTTPS certs so our browsers won't freak out on us.\n\n- Inside of Admin mode powershell run the following\n\n<div class='embeddedscript' data-src=\"https://gist.github.com/sitefinitysteve/a8cdd04fb1b4a49952819d5d2d71ccba.js\"></div>\n\n- Install it into windows trusted certs through the steps [here](https://www.sitefinitysteve.com/blog/remote-certificate-is-invalid)\n- Now go back to IIS\n    - Find your site\n    - Click Bindings\n    - Add a new HTTPS binding, and choose this cert\n\n## Step 9: Validate the cert in MacOS\n\n- Inside of MacOS, Safari or Chrome, run \"https://dev.site.com\"\n- It should fire up with the Sitefinity config\\loading status screen\n- But you should also notice the cert is invalid... \n- Follow [these steps](https://iboysoft.com/news/how-to-trust-a-certificate-on-mac.html) to dowload the cert, add to your keychain, and trust it\n\n## Step 10: ðŸŽ‰\n\n- You're done, reload the site and everything should be just as it was back in windows, just faster (probably)"
}