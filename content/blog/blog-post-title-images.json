{"title":"Blog Post Title Images","needsFixing":false,"content":"  This is something I attempted to do back when SF4 was released and I migrated my site over to 4.  It didn\u0027t work at all, and I think it was Radoslav who identified the problem was with the parsing engine for templates.  However since then I believe he said the engine has been upgraded to use the Standard Asp.net one (I\u0027ll have to check the ticket) but regardless this is now possible and be as creative as you want to be...it\u0027s opened a ton of possibilities :)\n\n The idea is to be able to toggle visiblility of content based on if the content actually exists.  Now since blog posts don\u0027t typically have an image field, what you need to do is leverage the awesome new built in Custom Fields option inside your blog.\n\n![Blog post custom field](/images/posts/blog-post-title-images/2011_06_19_blogpostcustomfield.png?sfvrsn\u003d50058b66_2 \"2011_06_19_BlogPostCustomField\")\n\n So once you click that link I want you to make at least one new custom field as defined below.  The custom field will be called \"ImageURL\".\n\n![Definition](/images/posts/blog-post-title-images/2011_06_19_blogpostcustomfielddefinition.png?sfvrsn\u003d51058b66_2 \"2011_06_19_BlogPostCustomFieldDefinition\")\n\nI included a second field called ImageStyle to allow me to set custom inline css properties on the image (just in case).\n\nOk so now we need to go edit our blog Widget Template.  Which template you edit is totally dependant on the one you picked inside your blog widget so I wont TELL you which one to use.  You can open your own widget properties and have a look though (and edit it there).  Where you place this code is also totally up to you.  For me, I place it right below the blog title *h1* tag.\n\n\u003cdiv class\u003d\u0027embeddedscript\u0027 data-src\u003d\"https://gist.github.com/sitefinitysteve/9bf91870ac3a7dafa85bf57e65f098f3.js\"\u003e\u003c/div\u003e\n\nSo it\u0027s just a simple asp:Panel, however look at the two new properties we just created.  The **ImageStyle** property is inside of a style attribute so if we wanted we could set the property in the new blog post to have a bottom margin of 40, or maybe a bottom border, or maybe even a background color!   \n  Also have a look at the Visible property of the panel.  That\u0027s saying we only want to show the panel if a value exists inside the **ImageURL** custom property.  So if we don\u0027t define anything then the markup doesn\u0027t even get rendered!  Lastly the asp:Image control just shows the image based on the **ImageURL**.  So I suppose what you can also do is define a new property for ImageAltText and put that as the alternate text on the img tag if you want :) ...get the idea...see why this is so awesome...there\u0027s zero visual studio coding involved.\n\nSo lastly when you create your blog post this is what you\u0027ll get to enter your images URLs :)\n\n[![Custom Fields](/images/posts/blog-post-title-images/2011_06_19_customfields.png?sfvrsn\u003d57058b66_2 \"2011_06_19_CustomFields\")](/images/posts/blog-post-title-images/2011_06_19_customfields.png?sfvrsn\u003d57058b66_2)\n\nNow I haven\u0027t TRIED this, but I assume that since I used an asp:Image control that this field should also accept the tilde \"~\" for relative image pathing.\n\nHappy Sitefinitying  \n\\- Steve  \n  \n\\*\\*EDIT\\*\\*  \nAs of 4.2 this post will not work, they\u0027ve changed the security to not allow serverside code in templates.","featuredImage":"/images/stock/500x280/img23.jpg","seoDescription":"This post will show you how to dynamically show images for a blog post if the content exists.","seoMetaImage":"/images/stock/500x280/img23.jpg","publishedAt":"2012-03-15T23:44:47.0830000Z","slug":"blog-post-title-images","legacyUrl":"/code/2012/03/15/blog-post-title-images","markdown":true,"tags":["Tutorial"]}