{"title":"Using Webservices with Telerik OpenAccess","needsFixing":false,"content":"One of the major issues with querying a webservice with the non-domain model approach to OpenAccess was that if you tried to return a list of objects directly you can\u0027t dispose of your scope!  Ack!\n\nWhat happens client side is that you get a callback error saying **\"The ObjectScope is already closed\"**...bummer I wanted those objects\n\nI had a bunch of tickets go back and forth with the OpenAccess guys at Telerik and they suggested using fetch plans.  I however do not want to setup 40 fetch plans :)\n\nSo lets use anon typed in-memory objects...they seem to return fine while allowing me to kill my scope.\n\nSo from this:\n\n\u003cdiv class\u003d\u0027embeddedscript\u0027 data-src\u003d\"https://gist.github.com/sitefinitysteve/0f6f1186a868387de8cced9a217c6190.js?file\u003dFromThis.cs\"\u003e\u003c/div\u003e\n\nTo this:\n\n\u003cdiv class\u003d\u0027embeddedscript\u0027 data-src\u003d\"https://gist.github.com/sitefinitysteve/0f6f1186a868387de8cced9a217c6190.js?file\u003dToThis.cs\"\u003e\u003c/div\u003e\n\nSo really we\u0027re just re-creating the objects, but you can now dispose of your scope before you return from the webservice with no errors!\n\nCheers,  \nSteve","featuredImage":"/images/stock/500x280/img14.jpg","seoDescription":"One of the major issues with querying a webservice with the non-domain model approach to OpenAccess was that if you tried to return a list of objects directly you can't dispose of your scope","seoMetaImage":"/images/stock/500x280/img14.jpg","publishedAt":"2012-03-16T02:17:37.4530000Z","slug":"using-webservices-with-telerik-openaccess","legacyUrl":"/code/2012/03/16/using-webservices-with-telerik-openaccess","markdown":true,"tags":["Tutorial"]}