{
    "title": "Sitefinity 7.1s new multi-widget module system",
    "needsFixing": false,
    "content": "Before Sitefinity 7.1 came around, when you had a heirarchical module, it generated a single complex content widget\\\\designer.  Understanding how it worked was often confusing and frustrating.  \n  \nThis is all fixed in 7.1...now get an entire toolbox section created and a single widget for each content \"Type\".  BOO-YA.  \n  \n  [Alan Rotem](https://plus.google.com/+AlonRotem/posts) recorded a video showing how it all works, super slick.  \n  \n  \nThe problem is that modules created prior to 7.1 only gave you that single widget, and there\u0027s no way to automatically generate these new widgets so you can update your pages.  If you add a new type to your Module, they show up under Content, but you don\u0027t get the dedicated toolbox section and the legacy types don\u0027t get their special widgets.  \n  \nThe good news is that it\u0027s quite simple to do :)  Well...bit annoying in that you\u0027re hunting down Guids, but not the end of the world.  \n  \nSo lets take the following test module structure  \n![71TestModuleHierarchy](/images/posts/pre-7.1-dynamiccontent-single-hierarchical-widget-to-7.1s-new-multi-widget-system/71testmodulehierarchy.png?sfvrsn\u003d6a058b66_2 \"71TestModuleHierarchy\")  \n  \nThis is the xml added to your ToolboxesConfig.config  \nAs a reference, this is what the pre 7.1 xml looked like...usually just chucked at the bottom of your \"Content\" section (bloating it)  \n  \nIt\u0027s essentially saying load X widget of type Y (which you can get from the code samples).  The last three properties define the default Master (List) and Detail (Full) templates, and the Type.  \n  \nSoooo...where do we get the Guids for the templates.  Well lets wander over to the widget\\\\control template screen (/Sitefinity/Design/ControlTemplates/ControlTemplates) and open up our friend mr.firebug (to the Console tab).   \n  \nThe console tab will show you all ajax requests sent by the page you\u0027re on and you can then drill into the JSON to find the Ids.  I recommend loading the page then performing a search for the templates you want unless you want to endlessly open the JSON objects looking for the right template id.  \n  \n![71TestModuleWidgetIdLocator](/images/posts/pre-7.1-dynamiccontent-single-hierarchical-widget-to-7.1s-new-multi-widget-system/71testmodulewidgetidlocator.png?sfvrsn\u003d95058b66_2 \"71TestModuleWidgetIdLocator\")  \n  \nYou can do all this from the backend advanced settings toolbox area, but for a complex module, that\u0027s a lot of clicking and loading. I prefer just to wrap it all together into notepad++ then paste it into the Toolbox config manually (remembering to recycle the app pool).  For those who don\u0027t know, adding to the config with the UI means you don\u0027t need to recycle the app pool.  \n  \n\\*\\*NOTE: 7.1 Modules are not \"special\", it just now generate multiple widgets where before it was a single widget...no harm in migrating to this.",
    "featuredImage": "/images/stock/500x280/img11.jpg",
    "seoDescription": "Sitefinity 7.1 introduces a new module system that generates widgets for each type, and those widgets can now react to each other based on the page route, here's now to move yourself over from previous versions.",
    "seoMetaImage": "/images/stock/500x280/img11.jpg",
    "publishedAt": "2014-08-15T18:37:43.6870000Z",
    "slug": "single-hierarchical-to-new-multi-widget-system",
    "legacyUrl": "/code/2014/08/15/pre-7.1-dynamiccontent-single-hierarchical-widget-to-7.1s-new-multi-widget-system",
    "markdown": true,
    "tags": [
        "Tutorial",
        "Sitefinity"
    ]
}