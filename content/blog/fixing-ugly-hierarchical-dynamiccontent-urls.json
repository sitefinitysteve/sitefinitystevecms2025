{"title":"Fixing Ugly Hierarchical DynamicContent Urls","needsFixing":false,"content":"The module builder gives is a lot of power, and a little while ago it was enhanced to allow nested types.  \n  \nExhibit A:  \n  \n![Hierarchical Module](/images/posts/fixing-ugly-hierarchical-dynamiccontent-urls/hierarchical-module1.png?sfvrsn\u003d28078b66_2 \"hierarchical-module1\")  \n  \nSo using the default front-end control, to get to a \"case\" it always has to render it\u0027s parent out...that\u0027s how it knows which \"case\" to load (if it wasn\u0027t there you might have 2 cases in different libraries with the same url name).  Clearly it exists this way because the general user has no idea about routing, they just want to drop the control on the page and have it work.  \n  \nHere\u0027s the problem with that...the url ends up being ugly if you\u0027re not using the control if \"full\" \"default\" dynamic mode.  \n  \nBy that I mean lets say you have a page created to show JUST detail items.  \n/library/detail/case\n...this type of setup allows your \"detail\" view to have a different page template than the master listview right.  \n  \nSOOO...with the default control on both the master and the detail page, and the master control set to open detail items on the detail page this is what your url would look like.  \n/mylibrary/detail/mylibrary/mycase  \n  \n...redundant as all hell.  \n  \nSo whats the fix, well it\u0027s actually not too hard to implement, but it would be AWESOME if telerik could include this ability in a future version of the control.  \n  \n\u003cdiv class\u003d\u0027embeddedscript\u0027 data-src\u003d\"https://gist.github.com/sitefinitysteve/3a462a46d0a6826a5d1bde41f13d1616.js\"\u003e\u003c/div\u003e\n  \nWe\u0027re just inheriting from the DEFAULT control, and TELLING it what the parenturl is, so it\u0027s not inferring from the url.  The beauty is that it only does anything if the ParentUrlName is set, if it isn\u0027t the control behaves as it always would.  \n  \nSo from here all you need to do is compile and change the \"Control CLR Type or Virtual Path\" field in the toolbox to be your custom control instead of the default.  \n  \n(NOTE: Don\u0027t forget to actually SET the parenturlname when editing the advanced properties of the control)  \n  \nSteve","featuredImage":"/images/stock/500x280/img8.jpg","seoDescription":"Sitefinitys default Hierarchical DynamicContent control has no Url flexability...here's how we can fix all that so we have nicer routing.","seoMetaImage":"/images/stock/500x280/img8.jpg","publishedAt":"2013-04-02T17:51:04.4430000Z","slug":"fixing-ugly-hierarchical-dynamiccontent-urls","legacyUrl":"/code/2013/04/02/fixing-ugly-hierarchical-dynamiccontent-urls","markdown":true,"tags":["Tutorial"]}