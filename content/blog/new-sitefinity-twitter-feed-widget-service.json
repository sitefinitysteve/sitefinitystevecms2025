{
  "publishedAt": "2018-12-19T16:10:43.5300000Z",
  "legacyUrl": "/code/2018/12/19/new-sitefinity-twitter-feed-widget-service",
  "needsFixing": false,
  "slug": "new-sitefinity-twitter-feed-widget-service",
  "featuredImage": "/images/stock/500x280/img22.jpg",
  "markdown": true,
  "title": "New Sitefinity Twitter Feed\\Widget\\Service",
  "tags": [],
  "content": "Sitefinity officially [depreciated the original native twitter feed widget in 11.1](https://www.progress.com/documentation/sitefinity-cms/deprecation-of-social-media-buttons-11.1), along with all the old social buttons. So this isn't a **BAD** thing since the original widget never really returned proper twitter markup. The content was fed into sitefinity though a \"pipe\" (think SF background service) and exposed locally as a feed.  The content however was stored as plain text, almost zero of the tons of metadata associated with a tweet came though.   \n  \nExample  \n\n<div class='embeddedscript' data-src=\"https://gist.github.com/sitefinitysteve/ac3bc69d7acb93ed0472b8aeff3c043b.js?file=sample.json\"></div>  \n  \nSo this tweet content contains a bunch of hashtags and a link, none of it is parsed or html so you have to do this yourself or hope no user wants to interact with it.  \n  \nOkay, so I rebuilt it :)  \n  \nThis time it's based on a [TweetSharp fork](https://github.com/Yortw/tweetmoasharp) and you get ALL the data right from twitter.  Not only that but the feed types (yes, types, @mentions, user timeline, single tweet, home timeline) are all exposed through CACHED (configurable) [ServiceStack routes](https://github.com/sitefinitysteve/RandomSiteControlsMVC/wiki/Twitter#servicestack-routes).  So you can use my cshtml widgets or you can just work with the service API layer directly with XHR GET requests.  \n  \nResults are cached globally based on a setting in the backend advanced settings /Sitefinity/Administration/Settings/Advanced/SitefinitySteveMvc.  \nThis matters because twitter imposes a limit on api calls.  So if you have 100 requests a second to your site, thats 100 calls to twitter a second, the API would shut you down fast.  With cache, you're only hitting it once in that cache period, which also means you don't incur any callback latency penalties to the twitter api.  \n  \n**NOTE**  \nTweetSharp references Newtonsoft.Json v11 You will probably need to REVERSE assemblybind sitefinity to use the included v10 (as of 11.1).  \n  \n<div class='embeddedscript' data-src=\"https://gist.github.com/sitefinitysteve/ac3bc69d7acb93ed0472b8aeff3c043b.js?file=web.config\"></div>  \n  \n[Go get it now](https://www.nuget.org/packages/RandomSiteControlsMVC/)",
  "seoMetaImage": "/images/stock/500x280/img22.jpg",
  "seoDescription": "Sitefinity no longer contains a Native Twitter widget. RandomSiteControlsMVC to the rescue to restore the functionality and expose an API for you to customize it yourself."
}